{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/menu-comp/contact-comp/contact-comp.component.ts","./src/app/menu-comp/contact-comp/contact-comp.component.html","./src/app/menu-comp/home-comp/home-comp.component.ts","./src/app/menu-comp/home-comp/home-comp.component.html","./src/app/menu-comp/menu-comp.component.ts","./src/app/menu-comp/menu-comp.component.html","./src/app/menu-comp/patient-checkin-comp/patient-checkin-comp.component.ts","./src/app/menu-comp/patient-checkin-comp/patient-checkin-comp.component.html","./src/app/menu-comp/search-comp/search-comp.component.ts","./src/app/menu-comp/search-comp/search-comp.component.html","./src/app/patient.service.ts","./src/app/patients.model.ts","./src/app/shared/data-storage.service.ts","./src/app/treatment.model.ts","./src/app/treatment.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { HomeCompComponent } from './menu-comp/home-comp/home-comp.component';\nimport { SearchCompComponent } from './menu-comp/search-comp/search-comp.component';\nimport { PatientCheckinCompComponent } from './menu-comp/patient-checkin-comp/patient-checkin-comp.component';\nimport { ContactCompComponent } from './menu-comp/contact-comp/contact-comp.component';\n\n\n\nconst appRoutes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full'},\n    { path: 'home', component: HomeCompComponent},\n    { path: 'search-patient', component: SearchCompComponent},\n    { path: 'patient-checkin', component: PatientCheckinCompComponent},\n    { path: 'contact', component: ContactCompComponent}\n\n];\n\n@NgModule({\nimports: [RouterModule.forRoot(appRoutes)],\nexports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Search-project';\n\n  constructor(private spinner: NgxSpinnerService) {\n\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 2000);\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<link href=\"https://fonts.googleapis.com/css?family=Libre+Baskerville&display=swap\" rel=\"stylesheet\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n\n\n<ngx-spinner color=\"#602352\"></ngx-spinner>\n  \n  <div class = \"container\" id=\"sticky-header\">\n\n    <app-menu-comp></app-menu-comp>\n\n\n  </div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport {FieldsetModule} from 'primeng/fieldset';\nimport {AccordionModule} from 'primeng/accordion';\nimport {DialogModule} from 'primeng/dialog';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxMaskModule } from 'ngx-mask';\n\n\nimport { AppComponent } from './app.component';\nimport { MenuCompComponent } from './menu-comp/menu-comp.component';\nimport { HomeCompComponent } from './menu-comp/home-comp/home-comp.component';\nimport { SearchCompComponent } from './menu-comp/search-comp/search-comp.component';\nimport { PatientCheckinCompComponent } from './menu-comp/patient-checkin-comp/patient-checkin-comp.component';\nimport { ContactCompComponent } from './menu-comp/contact-comp/contact-comp.component';\nimport { PatientService } from './patient.service';\nimport { DataStorageService } from './shared/data-storage.service';\nimport { TreatmentService } from './treatment.service';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuCompComponent,\n    HomeCompComponent,\n    SearchCompComponent,\n    PatientCheckinCompComponent,\n    ContactCompComponent,\n  ],\n  imports: [\n\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TableModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    FieldsetModule,\n    AccordionModule,\n    DialogModule,\n    NgSelectModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [PatientService, DataStorageService, TreatmentService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-contact-comp',\n  templateUrl: './contact-comp.component.html',\n  styleUrls: ['./contact-comp.component.css']\n})\nexport class ContactCompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p id=\"contact\">contact-comp works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home-comp',\n  templateUrl: './home-comp.component.html',\n  styleUrls: ['./home-comp.component.css']\n})\nexport class HomeCompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"home\"><p>Home comp works!</p></div>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n// import { ResizedEvent } from '/Users/sruthimahalaxmi/SruthiProjects/branches/search-edit/thc-ui/node_modules/angular-resize-event';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  useAnimation\n} from '@angular/animations';\nimport { pulse } from 'ng-animate';\n\n@Component({\n  selector: 'app-menu-comp',\n  templateUrl: './menu-comp.component.html',\n  styleUrls: ['./menu-comp.component.css'],\n  animations: [\n    trigger('toggled', [\n      // ...\n      state('true', style({\n        position: 'fixed',\n        top: '45px',\n        width: '180px'\n      })),\n      state('false', style({\n        position: 'fixed',\n        top: '45px',\n        width: '45px'\n      })),\n      transition('true => false', [\n        animate('0.2s')\n      ]),\n      transition('false => true', [\n        animate('0.3s')\n      ]),\n    ]),\n      trigger('hamburguerX', [\n        state('hamburguer', style({})),\n        state('topX', style({\n          transform: 'rotate(45deg)',\n          transformOrigin: '10% 10%',\n          marginLeft: '7px',\n          marginTop: '12px',\n          width: '15px'\n        })),\n        state('hide', style({\n          opacity: 0\n        })),\n        state('bottomX', style({\n          transform: 'rotate(-45deg)',\n          transformOrigin: '10% 90%',\n          marginLeft: '7px',\n          marginTop: '-2px',\n          width: '15px'\n        })),\n        transition('* => *', [\n          animate('0.1s')\n        ]),\n      ])\n    // trigger('pulse', [transition('* => *', useAnimation(pulse , {\n    //   // Set the duration to 5seconds and delay to 2seconds\n    //   params: { timing: 5, delay: 2 }\n    // }))])\n  ]\n})\nexport class MenuCompComponent implements OnInit, AfterViewInit {\n\n   @ViewChild('pageContentWrapper', {static: false}) pageContentWrapper: ElementRef;\n   @ViewChild('sidebarWrapper', {static: false}) sidebarWrapper: ElementRef;\n   @ViewChild('toggleMenuIcon', {static: false}) toggleMenuIcon: ElementRef;\n  @ViewChild('closeMenuIcon', { static: false}) closeMenuIcon: ElementRef;\n  public toggled = false;\n // pulse: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit() {\n    this.pageContentWrapper.nativeElement.style.marginLeft = '85px';\n    this.pageContentWrapper.nativeElement.style.width = '108%';\n  }\n  onToggle() {\n    this.toggled = !this.toggled;\n    if (this.toggled === true) {\n      this.pageContentWrapper.nativeElement.style.marginLeft = '220px';\n      this.pageContentWrapper.nativeElement.style.width = '96.5%';\n    } else {\n      this.pageContentWrapper.nativeElement.style.marginLeft = '85px';\n      this.pageContentWrapper.nativeElement.style.width = '108%';\n    }\n  }\n  }\n\n","<script src=\"https://code.jquery.com/jquery-3.5.0.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/primeng.min.css\" />\n    \n<div id=\"wrapper\">\n    <div id=\"header\">\n        \n        <nav class=\"navbar navbar-expand-lg navbar-light\">\n            <a class=\"navbar-brand\" routerLink = \"/home\">Tirumala Homeo Clinic</a>\n            <div class=\"container-fluid\">\n                <button id=\"login\" type=\"button\" class=\"btn btn-outline-light\">\n                    <i class=\"fa fa-user fa-lg\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n            \n        </nav>\n        <div id=\"menu-toggle\"\n                role=\"button\" \n                (click)=\"onToggle()\">\n                <div class=\"toggleIcon\">\n                <span class=\"icon-bar\" [@hamburguerX]=\"toggled ? 'topX' : 'hamburguer'\"></span>\n                <span class=\"icon-bar\" [@hamburguerX]=\"toggled ? 'hide' : 'hamburguer'\"></span>\n                <span class=\"icon-bar\" [@hamburguerX]=\"toggled ? 'bottomX' : 'hamburguer'\"></span>\n                </div> \n        </div>\n    </div>\n\n\n    \n    <div [@toggled]=\"toggled ? 'true' : 'false'\" id=\"sidebarWrapper\" #sidebarWrapper>\n        <ul class=\"sidebar-nav\">\n            <li routerLink = \"/home\" \n                routerLinkActive = \"active\" >\n                <i style = \"cursor: pointer;\" class=\"fa fa-fw fa-home\"></i>\n                <a style = \"cursor: pointer;\">Home</a>\n            </li>\n            <li routerLink = \"/search-patient\" routerLinkActive = \"active\">\n                <i style = \"cursor: pointer;\" class=\"fa fa-fw fa-search\"></i>\n                <a style = \"cursor: pointer;\">Search Patient</a>\n            </li>\n            <li routerLink = \"/patient-checkin\" routerLinkActive = \"active\">\n                <i id=\"pcIcon\" style = \"cursor: pointer;\" class=\"fa fa-check-square-o\"></i><a style = \"cursor: pointer;\" >Patient Check-in</a>\n            </li>\n            <li routerLink = \"/contact\" routerLinkActive = \"active\">\n                <i style = \"cursor: pointer;\" class=\"fa fa-fw fa-envelope\"></i><a style = \"cursor: pointer;\">Contact Us</a>\n            </li>\n        </ul>\n    </div> \n   \n    <div id=\"pageContentWrapper\" #pageContentWrapper>\n        <div class=\"container-fluid\">\n            <div id=\"router-outlet\">\n                <router-outlet></router-outlet>\n            </div> \n            </div>\n    </div> \n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Patient } from 'src/app/patients.model';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\n\n\n@Component({\n  selector: 'app-patient-checkin-comp',\n  templateUrl: './patient-checkin-comp.component.html',\n  styleUrls: ['./patient-checkin-comp.component.css']\n})\nexport class PatientCheckinCompComponent implements OnInit {\n\n  patients: Patient[] = [];\n\n patientCheckinForm: FormGroup;\n//  @ViewChild('rdbtn') rbtn: ElementRef;\n\n  constructor(private dataStorageService: DataStorageService) { }\n\n  ngOnInit() {\n    this.initForm();\n    // console.log(this.rbtn);\n\n  }\n\n  private initForm() {\n    const firstName = '';\n    const lastName = '';\n    const dob = '';\n    const gender = '';\n    const phone = '';\n\n    this.patientCheckinForm = new FormGroup({\n      firstName: new FormControl(firstName, Validators.required),\n      lastName: new FormControl(lastName, Validators.required),\n      dob: new FormControl(dob, Validators.required),\n      gender: new FormControl(gender, Validators.required),\n      phone: new FormControl(phone, [Validators.required, Validators.maxLength(10)])\n      // postalCode: new FormControl(postalCode)\n    });\n  }\n\n  onAddPatient() {\n    const pId = '*';\n    const firstName = this.patientCheckinForm.controls.firstName.value ? this.patientCheckinForm.controls.firstName.value : '*';\n    const lastName = this.patientCheckinForm.controls.lastName.value ? this.patientCheckinForm.controls.lastName.value : '*';\n    const dob = this.patientCheckinForm.controls.dob.value ? this.patientCheckinForm.controls.dob.value : '*';\n    const gender = this.patientCheckinForm.controls.gender.value ? this.patientCheckinForm.controls.gender.value : '*';\n    const phone = this.patientCheckinForm.controls.phone.value ? this.patientCheckinForm.controls.phone.value : '*';\n    this.dataStorageService.addPatient(new Patient(pId, firstName, lastName, dob, gender, phone));\n    this.onClear();\n  }\n\n  onClear() {\n    this.patientCheckinForm.reset();\n    this.patientCheckinForm.controls.firstName.setValue('');\n    this.patientCheckinForm.controls.lastName.setValue('');\n    this.patientCheckinForm.controls.dob.setValue('');\n    this.patientCheckinForm.controls.gender.setValue('');\n    this.patientCheckinForm.controls.phone.setValue('');\n    }\n\n}\n","<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/themes/omega/theme.css\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/primeng.min.css\" />\n\n\n<form [formGroup] = \"patientCheckinForm\" #pcForm >\n   <fieldset id=\"pcForm\">\n       <legend >New Patient Check-in Form</legend>\n\n        <p-accordion>\n            <p-accordionTab header=\"Personal Details\"  [selected]=\"true\">\n                <div class=\"form-row\">\n                    <div class = \"form-group col\">\n                        <label for=\"firstName\">First Name</label>\n                            <input type=\"text\" \n                            id=\"firstName\"\n                            class=\"form-control\" \n                            placeholder=\"First Name\"\n                            name = \"firstName\"\n                            formControlName = \"firstName\">\n                    </div>\n                    <div class = \"form-group col\">\n                            <label for=\"lastName\">Last Name</label>\n                            <input type=\"text\" \n                            id=\"lastName\"\n                            class=\"form-control\" \n                            placeholder=\"Last Name\"\n                            name = \"lastName\"\n                            formControlName = \"lastName\">\n                    </div>\n                \n                <!-- <div class = \"form-group row\">\n                        <label for=\"patientId\" class=\"col-sm-3 col-form-label\">Patient Id: </label>\n                        <div class=\"col-sm-9\">\n                        <input type=\"text\" \n                        id=\"patientId\"\n                        class=\"form-control\" \n                        placeholder=\"Patient #\"\n                        name = \"patientId\"\n                        formControlName = \"patientId\">\n                        </div>\n                </div> -->\n                \n                    <div class = \"form-group col\">\n                        <label for=\"dob\">Date of Birth: </label>\n                        <input type=\"date\"\n                        id=\"dob\"\n                        class=\"form-control\"\n                        name = \"dob\"\n                        formControlName = \"dob\">\n                    </div> \n                \n                    <div class=\"form-group col\">\n                        <label for=\"gender\">Gender</label>\n                        <select id=\"gender\" class=\"form-control\" name=\"gender\" formControlName=\"gender\">\n                        <option value=''>Gender</option>\n                        <option>Male</option>\n                        <option>Female</option>\n                        <option>Other</option>\n                        </select>\n                    </div>\n                \n                    <div class=\"form-group col\" id=\"phone-div\">\n                        <label for=\"phone\">Phone No#: </label>\n                        <input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"##########\"\n                        class=\"form-control\"\n                        name = \"phone\"\n                        formControlName = \"phone\">\n                    </div>\n                    \n                </div>\n            </p-accordionTab>\n            <p-accordionTab header=\"Treatment Details\">\n                ...        \n            </p-accordionTab>\n            \n        </p-accordion>\n    \n    \n    \n        <div class=\"form-group row\" id=\"patientCheckinButtons\">\n            <button type=\"submit\" \n            id=\"searchButton\" \n            class=\"btn btn-outline-primary btn-sm col-sm-2\" (click) = \"onAddPatient()\" [disabled] = \"!patientCheckinForm.valid\"><i class=\"fa fa-plus-square\"></i> Add Patient</button>\n        \n            <button type=\"reset\" \n            id=\"cancelButton\" \n            class=\"btn btn-outline-secondary btn-sm col-sm-2\" (click)= \"onClear()\" ><i class=\"fa fa-window-close\"></i> Cancel</button>\n        </div>\n\n    </fieldset>\n   \n\n</form>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\n\n\nimport { PatientService } from 'src/app/patient.service';\nimport { Patient } from 'src/app/patients.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { Table } from 'primeng/table/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Treatment } from '../../treatment.model';\nimport { TreatmentService } from 'src/app/treatment.service';\n\n@Component({\n  selector: 'app-search-comp',\n  templateUrl: './search-comp.component.html',\n  styleUrls: ['./search-comp.component.css']\n})\nexport class SearchCompComponent implements OnInit {\n\n@Input() id: number;\n\npatients: Patient[] = [];\ncols: any[];\npatientSearchForm: FormGroup;\naddTreatmentForm: FormGroup;\n@ViewChild('dt') table: Table;\npatientCount = 0;\npublic searchMode: boolean;\ntreatments: Treatment[] = [];\ndisplayModal: boolean;\ndisplayModalNotes: boolean;\nitemsSymptoms = [];\nselectedSymptoms = [];\nitemsMedications = [];\nselectedMedications = [];\ntempPt: string;\nshow: boolean;\ntreatmentNotes: string;\n// tCols: any;\npublic isExpanded = false;\npublic expandedRows = {};\npublic temDataLength = 0;\n// dropdownSymptomsSettings = {};\ntempInitPatient: Patient;\n\nconstructor(private patientService: PatientService,\n            private route: ActivatedRoute,\n            private dataStorageService: DataStorageService,\n            private spinner: NgxSpinnerService,\n            private treatmentService: TreatmentService) {\n\n}\nngOnInit() {\n  this.searchMode = false;\n  this.initForm();\n  this.cols = [\n    { field: 'firstName', header: 'First Name', display: 'table-cell' },\n    { field: 'lastName', header: 'Last Name', display: 'table-cell' },\n    { field: 'dob', header: 'Date Of Birth', display: 'table-cell' },\n    { field: 'gender', header: 'Gender', display: 'table-cell' },\n    { field: 'phone', header: 'Phone #', display: 'table-cell' }\n  ];\n  this.onSearch();\n  this.show = false;\n  this.initTreatmentForm();\n}\n\n// Initializing Search-Patient Form\n\nprivate initForm() {\n  const pId = '';\n  const firstName = '';\n  const lastName = '';\n  const dob = '';\n  const gender = '';\n  const phone = '';\n  // const postalCode = [];\n\n  this.patientSearchForm = new FormGroup({\n    pId: new FormControl(pId),\n    firstName: new FormControl(firstName),\n    lastName: new FormControl(lastName),\n    dob: new FormControl(dob),\n    gender: new FormControl(gender),\n    phone: new FormControl(phone, Validators.maxLength(10))\n    // postalCode: new FormControl(postalCode)\n  });\n\n}\n\n// Collect form control data from search form\n// and display resulted data in results table\n\nonSearch() {\n  this.spinner.show();\n  let c = 0;\n  for (const field in this.patientSearchForm.controls) {\n    if (this.patientSearchForm.get(field).value !== null\n        && this.patientSearchForm.get(field).value !== '' || field === 'gender') {\n          c++;\n        }\n  }\n\n  if (c === 0) {\n    this.searchMode = true;\n    this.spinner.hide();\n    return;\n  }\n\n  const pId = this.patientSearchForm.controls.pId.value ? this.patientSearchForm.controls.pId.value : '*';\n  const firstName = this.patientSearchForm.controls.firstName.value ? this.patientSearchForm.controls.firstName.value : '*';\n  const lastName = this.patientSearchForm.controls.lastName.value ? this.patientSearchForm.controls.lastName.value : '*';\n  const dob = this.patientSearchForm.controls.dob.value ? this.patientSearchForm.controls.dob.value : '*';\n  // const gender = this.patientSearchForm.controls.gender.value ? this.patientSearchForm.controls.gender.value : '*';\n  const gender = 'Male';\n  const phone = this.patientSearchForm.controls.phone.value ? this.patientSearchForm.controls.phone.value : '*';\n\n  const patient = new Patient(pId, firstName, lastName, dob, gender, phone);\n\n  // let patientCount = 0;\n\n  setTimeout(() => {\n    this.dataStorageService.getPatientCount()\n    .subscribe(count => {\n      this.patientCount = count;\n      if (this.patientCount > 0) {\n        this.dataStorageService.fetchPatients(patient, this.patientCount)\n        .subscribe(res => {\n          this.patients = [];\n          res.forEach(result => {\n            this.patients.push(new Patient(result._id, result._source.firstName,\n              result._source.lastName,\n              result._source.dob,\n              result._source.gender,\n              result._source.phone));\n          });\n          this.patientService.getPatients();\n        });\n      }\n    });\n    this.searchMode = true;\n    this.spinner.hide();\n  }, 2000);\n\n  // this.tCols = [\n  //   { field: 'treatmentDate', header: 'Treated Date', display: 'table-cell' },\n  //   { field: 'symptoms', header: 'Symptoms', display: 'table-cell' },\n  //   { field: 'medications', header: 'Prescription', display: 'table-cell' },\n  //   { field: 'addNotes', header: 'Notes', display: 'table-cell'}\n  // ];\n\n}\n\n// onSearchAllPatients() {\n//   this.dataStorageService.fetchAllPatients()\n//   .subscribe(result => {\n//   this.patients = [];\n//   result.forEach(i => {\n//     const pat: Patient = i._source;\n//     if (pat !== undefined) {\n//       this.patients.push(i._source);\n//     }\n//     this.patients.slice();\n//     });\n//     });\n// }\n\n  onRowEditInit(patient: Patient) {\n    // copy patient object to tempInitPatient object to pass on to onRowEditCancel method.\n  this.tempInitPatient = { ...patient};\n}\n\n  onRowEditSave(patient: Patient) {\n  this.dataStorageService.updatePatient(patient)\n  .subscribe(() => {\n    console.log('Success!');\n  });\n  }\n\n  onRowEditCancel(patient: Patient, ri: number) {\n  patient.pId = this.tempInitPatient.pId;\n  patient.firstName = this.tempInitPatient.firstName;\n  patient.lastName = this.tempInitPatient.lastName;\n  patient.dob = this.tempInitPatient.dob;\n  patient.gender = this.tempInitPatient.gender;\n  patient.phone =  this.tempInitPatient.phone;\n}\n\n  onAdd() {\n  let patientCount = 0;\n  this.dataStorageService.getPatientCount()\n  .subscribe(result => {\n    patientCount = result;\n  });\n  this.dataStorageService.storePatient(patientCount);\n}\n\n  onClear() {\n    this.patients = [];\n    this.searchMode = false;\n    this.patientSearchForm.controls.pId.setValue('');\n    this.patientSearchForm.controls.firstName.setValue('');\n    this.patientSearchForm.controls.lastName.setValue('');\n    this.patientSearchForm.controls.dob.setValue('');\n    this.patientSearchForm.controls.gender.setValue('');\n    this.patientSearchForm.controls.phone.setValue('');\n    this.resetSort();\n  }\n\n  resetSort() {\n  this.table.sortOrder = 0;\n  this.table.sortField = '';\n  this.table.reset();\n}\n\n\npublic initTreatmentForm() {\n  const pId = '';\n  const treatmentDate = '';\n  const addSymptoms = '';\n  const addMedications = '';\n  const addNotes = '';\n\n  this.addTreatmentForm = new FormGroup({\n    pId: new FormControl(pId),\n    treatmentDate: new FormControl(treatmentDate),\n    addSymptoms: new FormControl(addSymptoms),\n    addMedications: new FormControl(addMedications),\n    addNotes: new FormControl(addNotes)\n  });\n\n}\n\ngetAllTreatments(rowData: Patient) {\n\n    for (const obj in this.expandedRows) {\n      if (obj !== rowData.pId) {\n      delete this.expandedRows[obj];\n      }\n  }\n    this.getTreatmentsOfPatient(rowData.pId);\n    this.tempPt = rowData.pId;\n}\n\ngetTreatmentsOfPatient(pId: string) {\n      this.dataStorageService.fetchTreatmentsOfPatient(pId)\n      .subscribe(res => {\n        this.treatments = [];\n        res.forEach(result => {\n          this.treatments.push(new Treatment(result._id,\n            result._source.tDate,\n            result._source.tSymptoms,\n            result._source.tMedPrescription,\n            result._source.tNotes));\n        });\n        this.treatmentService.getTreatments();\n      });\n      this.itemsSymptoms = this.treatmentService.dropdownSymptoms;\n      this.itemsMedications = this.treatmentService.dropdownMedications;\n}\n\naddTreatmentToPatient() {\n  console.log(this.tempPt);\n  const pid = this.tempPt;\n  const treatmentDate = this.addTreatmentForm.controls.treatmentDate.value ? this.addTreatmentForm.controls.treatmentDate.value : '*';\n  const addSymptoms = this.addTreatmentForm.controls.addSymptoms.value ? this.addTreatmentForm.controls.addSymptoms.value : '*';\n  const addMedications = this.addTreatmentForm.controls.addMedications.value ? this.addTreatmentForm.controls.addMedications.value : '*';\n  const addNotes = this.addTreatmentForm.controls.addNotes.value ? this.addTreatmentForm.controls.addNotes.value : '*';\n  let symptoms = '';\n  let medications = '';\n  if (addSymptoms !== '*') {\n    let tempSym = '';\n    addSymptoms.forEach(s => {\n      tempSym = tempSym + s.name + ' ';\n    });\n    const tempSymptomsList = tempSym.trim();\n    symptoms = tempSymptomsList.split(' ').join(', ');\n}\n  if (addMedications !== '*') {\n    let tempMed = '';\n    addMedications.forEach(m => {\n      tempMed = tempMed + m.name + ' ';\n    });\n    const tempMedicationsList = tempMed.trim();\n    medications = tempMedicationsList.split(' ').join(', ');\n  }\n\n  if (addNotes !== '*') {\n    let tempNotes = '';\n    tempNotes = addNotes.split();\n\n\n  }\n\n  this.dataStorageService.addTreatmentToPatient(new Treatment(pid, treatmentDate, symptoms, medications, addNotes))\n  .subscribe(res => {\n    console.log(res);\n    this.spinner.show();\n    setTimeout(() => {\n      this.getTreatmentsOfPatient(pid);\n      this.spinner.hide();\n    }, 1000);\n});\n\n  this.onClearTreatmentForm();\n}\n\nonClearTreatmentForm() {\n  this.addTreatmentForm.reset();\n}\n\nshowModalNotes() {\n  this.displayModal = true;\n}\n\nshowModalNotesDialog(rowData) {\n  this.displayModalNotes = true;\n  this.treatmentNotes = rowData.tNotes;\n  console.log(rowData);\n}\n\nonClearNotes() {\n  this.addTreatmentForm.controls.addNotes.reset();\n}\n\n}\n","<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/themes/omega/theme.css\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/primeng.min.css\" />\n\n\n<form [formGroup] = \"patientSearchForm\">\n\n   <fieldset class=\"form-group\" id=\"searchCriteria\">\n    <legend>Search Criteria</legend>\n    <div class=\"form-row\">\n        <div class=\"col\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" \n            class=\"form-control\" \n            id=\"firstName\" \n            name=\"firstName\"\n            placeholder=\"First Name\"\n            formControlName = \"firstName\"\n            >   \n        </div>\n        <div class=\"col\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" \n            class=\"form-control\" \n            id=\"lastName\" \n            placeholder=\"Last Name\"\n            name = \"lastName\"\n            formControlName = \"lastName\">    \n        </div>\n        <!-- <div class=\"col\">\n            <label for=\"patientId\">Patient Id</label>\n            <input type=\"text\" \n            class=\"form-control\" \n            id=\"patientId\" \n            placeholder=\"Patient #\"\n            name = \"patientId\"\n            formControlName = \"patientId\">    \n        </div> -->\n        <div class=\"col\">\n            <label for=\"dob\">Date of Birth</label>\n            <input type=\"date\" \n            class=\"form-control\" \n            id=\"dob\"\n            name = \"dob\"\n            formControlName = \"dob\">    \n        </div>\n        <div class=\"col\">\n            <label for=\"gender\">Gender</label>\n            <select class=\"form-control\" id=\"gender\" formControlName = \"gender\" name = \"gender\">\n                <option value=''>All</option>\n                <option>Male</option>\n                <option>Female</option>\n                <option>Other</option>\n            </select>   \n        </div>\n        <div class=\"col\">\n            <label for=\"phone\">Phone #</label>\n            <input type=\"number\" \n            class=\"form-control\" \n            id=\"phone\"\n            placeholder=\"9999999999\"\n            name = \"phone\"\n            formControlName = \"phone\"\n            pattern = \"^[1-9][0-9]*$\">   \n        </div>\n    </div>\n    <div id=\"formButtons\">\n            <button type=\"submit\" \n            id=\"searchButton\" \n            class=\"btn btn-outline-primary btn-sm shadow-none\" (click) = \"onSearch()\">Search <i class=\"fa fa-fw fa-search\"></i></button>\n            <button type=\"button\" \n            id=\"clearButton\" \n            class=\"btn btn-outline-secondary btn-sm shadow-none\" (click) = \"onClear()\">Clear</button>\n    </div>\n    \n   </fieldset>\n</form>\n<br>\n\n<fieldset id=\"searchResults\">\n    <legend>Search Results</legend>\n    <p-table #dt [columns]=\"cols\" \n                [value] = \"patients\" \n                editMode = \"row\"\n                dataKey = \"pId\"\n                [rows]=\"18\" \n                [paginator]=\"patients.length > 0\"\n                [scrollable]=\"true\" \n                scrollHeight=\"418px\"\n                [expandedRowKeys]=\"expandedRows\"\n                >\n        <ng-template pTemplate = \"header\" let-columns>\n            <tr id=\"searchTableHeader\">\n                <th class=\"expandRow\"><i class=\"pi pi-sort-down\"></i></th>\n                <th *ngFor=\"let col of columns\" [pSortableColumn] = \"col.field\">{{col.header}} <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"editButtons\">Action</th>\n            </tr> \n        </ng-template>\n        <ng-template pTemplate = \"body\"\n                     let-rowData\n                     let-expanded = \"expanded\"\n                     let-editing=\"editing\" \n                     let-ri=\"rowIndex\"\n                     >      \n            <tr [pEditableRow]=\"rowData\"\n                class=\"cursor-pointer\"\n                (click) = \"getAllTreatments(rowData)\"\n                >\n                <!-- (click) = \"getTreatmentsOfPatient(rowData.pId)\" -->\n                <td [pRowToggler]=\"rowData\" class=\"expandRow\">\n                    <a href=\"#\">\n                        <i [ngClass]=\"expanded ? 'pi pi-chevron-circle-down' : 'pi pi-chevron-circle-right'\"></i>\n                    </a>\n                 </td>\n                <td> \n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.firstName\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            <span [pRowToggler]=\"rowData\">\n                            {{rowData.firstName}}</span>\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\"> \n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.lastName\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            <span [pRowToggler]=\"rowData\">\n                            {{ rowData.lastName }}</span>\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.dob\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                        <span [pRowToggler]=\"rowData\">\n                        {{ rowData.dob | date: \"M/d/yyyy\"}}</span>\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.gender\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            <span [pRowToggler]=\"rowData\">\n                                {{ rowData.gender }}</span>\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"number\" [(ngModel)]=\"rowData.phone\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            <span [pRowToggler]=\"rowData\">\n                                {{ rowData.phone | mask: '(000) 000-0000' }}</span>\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td style=\"text-align:center\" class=\"editButtons\">\n                    <button href=\"#\" *ngIf=\"!editing\" \n                        pButton \n                        type=\"button\" \n                        pInitEditableRow\n                        class=\"btn btn-secondary btn-sm\"\n                        (click)=\"onRowEditInit(rowData)\">\n                        <i class=\"pi pi-pencil\"></i>\n                    </button>\n                    <button *ngIf=\"editing\"\n                        pButton\n                        type=\"button\"\n                        pSaveEditableRow\n                        class=\"btn btn-success btn-sm\"\n                        style=\"margin-right: .5em\"\n                        (click)=\"onRowEditSave(rowData)\">\n                        <i class=\"pi pi-check\"></i>\n                    </button>\n                    <button *ngIf=\"editing\"\n                            pButton\n                            type=\"button\"\n                            pCancelEditableRow\n                            class=\"btn btn-danger btn-sm\"\n                            (click)=\"onRowEditCancel(rowData, ri)\">\n                        <i class=\"pi pi-times\"></i>\n                    </button>\n                </td>\n            </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"rowexpansion\" let-columns=\"columns\" id=\"detailedView\">\n            <tr>\n                <td [attr.colspan]=\"columns.length + 2\">\n                    \n                    <fieldset class=\"form-group col-sm-6\" id=\"treatmentTableFormGroup\">\n                        <legend>Treatment History</legend>\n                            <p-table #tt [rows]=\"3\"\n                                        [scrollable]=\"true\" \n                                        scrollHeight= \"130px\" \n                                        [value]=\"treatments\"\n                                        sortField=\"tDate\"\n                                        dataKey = \"pId\"\n                                        [sortOrder]=\"-1\"\n                                        >\n                                        <!-- [columns]=\"tCols\" -->\n                                <ng-template pTemplate = \"header\" let-columns>\n                                    <tr>\n                                        <!-- <th [ngClass]=\"'tableStyle'\" *ngFor=\"let col of columns\" [pSortableColumn] = \"col.field\">{{col.header}} <p-sortIcon [field]=\"col.field\"></p-sortIcon></th> -->\n                                        \n                                        <th [pSortableColumn]=\"'tDate'\" style=\"width: 18%; background: #f4f4f4\">Treatment Date <p-sortIcon [field]=\"'tDate'\"></p-sortIcon></th>\n                                        <th style=\"width: 35%;\">Symptoms</th>\n                                        <th style=\"width: 30%\">Medication Pres.</th>\n                                        <th style=\"width: 17%\">Notes</th>\n                                    </tr> \n                                </ng-template>\n                                <ng-template pTemplate = \"body\" let-rowData>      \n                                    <tr>\n                                        <td style=\"width: 18%;\">{{ rowData.tDate | date: \"M/d/yyyy\"}} </td>\n                                        <td style=\"width: 35%;\">{{ rowData.tSymptoms }}</td>\n                                        <td style=\"width: 30%;\">{{ rowData.tMedPrescription }}</td>\n                                        <td style=\"width: 17%;\">\n                                            <button type=\"button\" class=\"btn btn-light\" (click)=\"showModalNotesDialog(rowData)\" label=\"Show\" id=\"showNotes\"><i class=\"pi pi-list\"></i></button>\n                                            <p-dialog header=\"Notes\" [(visible)]=\"displayModalNotes\" \n                                                [modal]=\"true\" [style]=\"{width: '52vw', height: '200px'}\" \n                                                [baseZIndex]=\"10000001\"\n                                                    [draggable]=\"false\" [resizable]=\"false\" [closable]=\"false\">\n                                                    <p [style]=\"{width: '48vw', height: '180px'}\">{{ treatmentNotes }}</p>\n                                                    <p-footer>\n                                                        <button type=\"button\" pButton (click)=\"displayModalNotes=false\">OK</button>\n                                                    </p-footer>\n                                                </p-dialog>\n                                        </td>\n                                        <!--or <td style=\"width: 12%;\">{{ rowData.tNotes }}</td> -->\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n                    </fieldset>\n                    <form [formGroup]=\"addTreatmentForm\">\n                    <fieldset class=\"form-group col-sm-6\" id=\"addTreatmentFormGroup\">\n                        <legend>Add Treatment</legend>\n                            <div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label col-form-label-sm\" for=\"treatmentDate\">Treatment Date: </label>\n                                    <input type=\"date\" \n                                    class=\"form-control form-control-sm col-sm-3\" \n                                    id=\"treatmentDate\"\n                                    name = \"treatmentDate\"\n                                    formControlName=\"treatmentDate\">\n                                    <div class=\"col-sm-1\"></div>\n\n                                    <button type=\"button\" class=\"btn btn-light col-sm-3\" (click)=\"showModalNotes()\" id=\"addNotes\">Additional Notes <i class=\"pi pi-pencil\"></i></button>\n                                        <p-dialog header=\"Additional Notes\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: '52vw'}\" [baseZIndex]=\"10000001\"\n                                            [draggable]=\"false\" [resizable]=\"false\" [closable]=\"false\">\n                                            <textarea class=\"form-control\" formControlName=\"addNotes\" [style]=\"{width: '48vw'}\">\n                                            </textarea>\n                                            <p-footer>\n                                                <button type=\"button\" class=\"btn btn-outline-secondary col-sm-4\" pButton (click)=\"displayModal=false\">Save</button>\n                                                <button type=\"button\" class=\"btn btn-outline-secondary col-sm-4\" pButton (click)=\"displayModal=false\" (click)=\"onClearNotes()\">Clear</button>\n                                            </p-footer>\n                                        </p-dialog>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label col-form-label-sm\" for=\"addSymptoms\">Symptom(s): </label>\n                                        <ng-select class=\"col-sm-9\" [items]=\"itemsSymptoms\"\n                                            bindLabel=\"name\"\n                                            placeholder=\"Select Symptoms\"\n                                            [closeOnSelect]=\"false\"\n                                            appendTo=\"body\"\n                                            [multiple]=\"true\"\n                                            [clearSearchOnAdd]=\"true\"\n                                            [virtualScroll]=\"true\"\n                                            formControlName = \"addSymptoms\"\n                                            >\n                                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\" [ngModelOptions]=\"{standalone: true}\"/> {{item.name}}\n                                            </ng-template>\n                                    </ng-select>\n                                    <!-- [(ngModel)]=\"selectedSymptoms\"\n                                    [ngModel]=\"item$.selected\" -->\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label col-form-label-sm\" for=\"addMedications\">Medication(s): </label>\n                                    <ng-select class=\"symptomStyle col-sm-9\" [items]=\"itemsMedications\"\n                                            bindLabel=\"name\"\n                                            placeholder=\"Select Medications\"\n                                            [closeOnSelect]=\"false\"\n                                            appendTo=\"body\"\n                                            [multiple]=\"true\"\n                                            [clearSearchOnAdd]=\"true\"\n                                            formControlName = \"addMedications\"\n                                            >\n                                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\" [ngModelOptions]=\"{standalone: true}\"/> {{item.name}}\n                                            </ng-template>\n                                            <!-- [(ngModel)]=\"selectedMedications\"\n                                            [ngModel]=\"item$.selected\" -->\n                                    </ng-select>\n                                </div>\n                                \n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-3\"></div>\n                                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm col-sm-4 tButtonAdd\" (click)=\"addTreatmentToPatient()\"><i class=\"fa fa-plus-square\"></i> Add Treatment</button> \n                                    <button type=\"reset\" class=\"btn btn-outline-secondary btn-sm col-sm-2 tButtonCancel\" (click)=\"onClearTreatmentForm()\">Cancel</button>                             \n                                </div>\n                            </div>\n                    </fieldset>\n                </form>\n                </td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n            \n            <tr *ngIf = \"searchMode\" [ngClass]=\"'tableStyle'\">\n                <td [attr.colspan]=\"columns.length\" style=\"text-align:center\">\n                    No records found\n                </td>\n                \n            </tr>\n        </ng-template>\n                 \n    </p-table>\n         \n</fieldset>","import { Patient } from './patients.model';\n\nexport class PatientService {\n\n\n    private patients: Patient[] = [];\n\n    constructor() {\n\n    }\n\n\n    getPatients()  {\n        return this.patients.slice();\n    }\n\n    getPatient(id: number) {\n    }\n\n\n\n}\n","export class Patient {\n    public pId: string;\n    public firstName: string;\n    public lastName: string;\n    public dob: string;\n    public gender: string;\n    public phone: number;\n\n    constructor(pId: string, fname: string, lname: string, dob: string, gender: string, phone: number) {\n        this.pId = pId;\n        this.firstName = fname;\n        this.lastName = lname;\n        this.dob = dob;\n        this.gender = gender;\n        this.phone = phone;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PatientService } from '../patient.service';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Patient } from '../patients.model';\nimport { Treatment } from '../treatment.model';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nconst headers = new HttpHeaders()\n        .append('Content-Type', 'application/json');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataStorageService {\n\n    // hostname  = 'ec2-18-218-1-248.us-east-2.compute.amazonaws.com';\n    hostname = 'localhost';\n    constructor(private patientService: PatientService,\n                private http: HttpClient) {}\n\n    storePatient(patientCount: number) {\n        throw new Error('Method not implemented.');\n      }\n\n\n    fetchPatients(patient: Patient, patientCount: number) {\n        const params = {\n            query: {\n                bool: {\n                    must: [{\n                        query_string: {\n                            default_field: 'firstName',\n                            query: patient.firstName + '*'\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'lastName',\n                            query: patient.lastName + '*'\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'gender',\n                            query: patient.gender\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'dob',\n                            query: patient.dob\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'phone',\n                            query: patient.phone + '*'\n                        }\n                    }]\n                }\n            },\n            from: 0,\n            size: patientCount\n        };\n        return this.http.post('http://' + this.hostname + ':9200/patients/patient/_search', params, {headers})\n        .pipe(map(data => {\n            // tslint:disable-next-line:no-string-literal\n            let x: any;\n            x = data;\n            const res = x.hits.hits;\n            // console.log(res);\n            return res;\n        }));\n    }\n\n    // fetchAllPatients() {\n    //     return this.http.get('http://ec2-18-218-1-248.us-east-2.compute.amazonaws.com:9200/_search?size=50', {headers})\n    //     .pipe(map(data => {\n    //         // tslint:disable-next-line:no-string-literal\n    //         let x: any;\n    //         x = data;\n    //         const res = x.hits.hits;\n    //         // console.log(res);\n    //         return res;\n    //     }));\n    // }\n\n    fetchAPatient(pId: string) {\n        return this.http.get('http://' + this.hostname + ':9200/patients/patient/' + pId, {headers})\n        .pipe(map(data => {\n            let x: any;\n            x = data;\n            const res = x;\n            return res;\n        }));\n    }\n\n    getPatientCount() {\n        return this.http.get('http://' + this.hostname + ':9200/patients/patient/_count')\n        .pipe(map(data => {\n            let x: any;\n            x = data;\n            const res: number = x.count;\n            return res;\n        }));\n    }\n\n    addPatient(patient: Patient) {\n        return this.http.post('http://' + this.hostname + ':9200/patients/patient/',\n        patient,\n        {headers})\n        .subscribe(res => {\n            console.log(res);\n        });\n    }\n\n    updatePatient(patient: Patient) {\n        const params = {\n            firstName: patient.firstName,\n            lastName: patient.lastName,\n            dob: patient.dob,\n            gender: patient.gender,\n            phone: patient.phone\n        };\n\n        // tslint:disable-next-line:max-line-length\n        return this.http.put('http://' + this.hostname + ':9200/patients/patient/' + patient.pId, params, {headers});\n    }\n\n\n    addTreatmentToPatient(treatment: Treatment) {\n        return this.http.post('http://' + this.hostname + ':9200/treatments/treatment/',\n        treatment,\n        {headers});\n    }\n\n    fetchTreatmentsOfPatient(pId: string) {\n        const params = {\n                query: {\n                bool: {\n                must: [\n                {\n                match: {\n                pid: pId\n                }\n                }\n                ],\n                must_not: [ ],\n                should: [ ]\n                }\n                },\n                from: 0,\n                size: 10,\n                sort: [ ],\n                aggs: { }\n                };\n        return this.http.post('http://' + this.hostname + ':9200/treatments/_search', params, {headers})\n        .pipe(map(data => {\n            // tslint:disable-next-line:no-string-literal\n            let x: any;\n            x = data;\n            const res = x.hits.hits;\n            // console.log(res);\n            return res;\n        }));\n    }\n}\n","export class Treatment {\n    public pid: string;\n    public tDate: string;\n    public tSymptoms: string;\n    public tMedPrescription: string;\n    public tNotes: string;\n\n    constructor(pid: string, treatmentDate: string, symptoms: string, medPrescription: string, notes: string ) {\n        this.pid = pid;\n        this.tDate = treatmentDate;\n        this.tSymptoms = symptoms;\n        this.tMedPrescription = medPrescription;\n        this.tNotes = notes;\n    }\n\n}\n","import { Treatment } from './treatment.model';\nimport { Injectable, Input } from '@angular/core';\n\n@Injectable()\nexport class TreatmentService {\n    // dropdownItems = [];\n    // selectedItems = [];\n    // dropdownSettings: IDropdownSettings = {};\n\n    // private treatments: Treatment[] = [\n    //     new Treatment('1', '12/27/2019', 'Headache, Low body temperature', 'Arsenic-Alb 200', ''),\n    //     new Treatment('1', '01/25/2020', 'Body pains, Restlessness', 'Arnica 200', ''),\n    //     new Treatment('1', '02/12/2020', 'Nausea, Headache', 'Nuxvom 30', ''),\n    //     new Treatment('1', '02/02/2020', 'High Temperature, Nausea, Body Pains', 'Mg-Phos 60', ''),\n    //     new Treatment('1', '03/10/2020', 'Sinus, Headache', 'Arsenic Alb 200', ''),\n    //     new Treatment('1', '03/10/2020', 'Stomach ache, Nausea', 'Merc-Sol 60', '')\n    // ];\n\n    private treatments: Treatment[] = [];\n\n    public dropdownSymptoms = [\n      { id: 1, name: 'Headache' },\n      { id: 2, name: 'Body-Pains' },\n      { id: 3, name: 'Stomach-ache' },\n      { id: 4, name: 'Nausea' },\n      { id: 5, name: 'Sinus' },\n      { id: 6, name: 'Low-Temperature'},\n      { id: 7, name: 'High-Temperature'}\n    ];\n\n    // public dropdownSymptoms = ['Headache', 'Body Pains'];\n\n    public selectedSymptoms = [\n        // { id: 2, name: 'Body Pains' },\n        // { id: 7, name: 'High Temperature' }\n      ];\n\n    public dropdownMedications = [\n      { id: 1, name: 'Arsenic-Alb-30' },\n      { id: 2, name: 'Arnica-60' },\n      { id: 3, name: 'Arsenic-Alb-200' },\n      { id: 4, name: 'Merc-Sol-30' },\n      { id: 5, name: 'Mg-Phos-60' },\n      { id: 6, name: 'Nuxvom-200'}\n    ];\n    public selectedMedications = [\n      // { id: 1, name: 'Arsenic-Alb 30' }\n    ];\n\n    getTreatments() {\n        return this.treatments.slice();\n    }\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}