{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/menu-comp/contact-comp/contact-comp.component.ts","webpack:///src/app/menu-comp/contact-comp/contact-comp.component.html","webpack:///src/app/menu-comp/home-comp/home-comp.component.ts","webpack:///src/app/menu-comp/home-comp/home-comp.component.html","webpack:///src/app/menu-comp/menu-comp.component.ts","webpack:///src/app/menu-comp/menu-comp.component.html","webpack:///src/app/menu-comp/patient-checkin-comp/patient-checkin-comp.component.ts","webpack:///src/app/menu-comp/patient-checkin-comp/patient-checkin-comp.component.html","webpack:///src/app/menu-comp/search-comp/search-comp.component.ts","webpack:///src/app/menu-comp/search-comp/search-comp.component.html","webpack:///src/app/patient.service.ts","webpack:///src/app/patients.model.ts","webpack:///src/app/shared/data-storage.service.ts","webpack:///src/app/treatment.model.ts","webpack:///src/app/treatment.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","spinner","title","show","setTimeout","hide","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContactCompComponent","HomeCompComponent","MenuCompComponent","toggled","pageContentWrapper","nativeElement","style","marginLeft","width","onToggle","position","top","transform","transformOrigin","marginTop","opacity","animations","static","PatientCheckinCompComponent","dataStorageService","patients","initForm","firstName","lastName","dob","gender","phone","patientCheckinForm","required","maxLength","pId","controls","value","addPatient","onClear","reset","setValue","onAddPatient","SearchCompComponent","patientService","route","treatmentService","patientCount","treatments","itemsSymptoms","selectedSymptoms","itemsMedications","selectedMedications","searchMode","cols","field","header","display","onSearch","patientSearchForm","c","get","patient","getPatientCount","subscribe","count","fetchPatients","res","forEach","result","push","_id","_source","getPatients","console","log","updatePatient","index","storePatient","resetSort","table","sortOrder","sortField","getTreatments","dropdownSymptoms","dropdownMedications","displayModal","PatientService","slice","Patient","fname","lname","headers","append","DataStorageService","http","params","query","bool","must","query_string","default_field","from","size","post","pipe","data","x","hits","put","providedIn","Treatment","treatmentDate","symptoms","medPrescription","notes","tDate","tSymptoms","tMedPrescription","tNotes","TreatmentService","name","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { HomeCompComponent } from './menu-comp/home-comp/home-comp.component';\nimport { SearchCompComponent } from './menu-comp/search-comp/search-comp.component';\nimport { PatientCheckinCompComponent } from './menu-comp/patient-checkin-comp/patient-checkin-comp.component';\nimport { ContactCompComponent } from './menu-comp/contact-comp/contact-comp.component';\n\n\n\nconst appRoutes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full'},\n    { path: 'home', component: HomeCompComponent},\n    { path: 'search-patient', component: SearchCompComponent},\n    { path: 'patient-checkin', component: PatientCheckinCompComponent},\n    { path: 'contact', component: ContactCompComponent}\n\n];\n\n@NgModule({\nimports: [RouterModule.forRoot(appRoutes)],\nexports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Search-project';\n\n  constructor(private spinner: NgxSpinnerService) {\n\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 2000);\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<link href=\"https://fonts.googleapis.com/css?family=Libre+Baskerville&display=swap\" rel=\"stylesheet\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n\n\n<ngx-spinner color=\"#602352\"></ngx-spinner>\n  \n  <div class = \"container\" id=\"sticky-header\">\n\n    <app-menu-comp></app-menu-comp>\n\n\n  </div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport {FieldsetModule} from 'primeng/fieldset';\nimport {AccordionModule} from 'primeng/accordion';\nimport {DialogModule} from 'primeng/dialog';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\nimport { AppComponent } from './app.component';\nimport { MenuCompComponent } from './menu-comp/menu-comp.component';\nimport { HomeCompComponent } from './menu-comp/home-comp/home-comp.component';\nimport { SearchCompComponent } from './menu-comp/search-comp/search-comp.component';\nimport { PatientCheckinCompComponent } from './menu-comp/patient-checkin-comp/patient-checkin-comp.component';\nimport { ContactCompComponent } from './menu-comp/contact-comp/contact-comp.component';\nimport { PatientService } from './patient.service';\nimport { DataStorageService } from './shared/data-storage.service';\nimport { TreatmentService } from './treatment.service';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuCompComponent,\n    HomeCompComponent,\n    SearchCompComponent,\n    PatientCheckinCompComponent,\n    ContactCompComponent,\n  ],\n  imports: [\n\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TableModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    FieldsetModule,\n    AccordionModule,\n    DialogModule,\n    NgSelectModule\n  ],\n  providers: [PatientService, DataStorageService, TreatmentService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-contact-comp',\n  templateUrl: './contact-comp.component.html',\n  styleUrls: ['./contact-comp.component.css']\n})\nexport class ContactCompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p id=\"contact\">contact-comp works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home-comp',\n  templateUrl: './home-comp.component.html',\n  styleUrls: ['./home-comp.component.css']\n})\nexport class HomeCompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"home\"><p>home-comp works!</p></div>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n// import { ResizedEvent } from '/Users/sruthimahalaxmi/SruthiProjects/branches/search-edit/thc-ui/node_modules/angular-resize-event';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  useAnimation\n} from '@angular/animations';\nimport { pulse } from 'ng-animate';\n\n@Component({\n  selector: 'app-menu-comp',\n  templateUrl: './menu-comp.component.html',\n  styleUrls: ['./menu-comp.component.css'],\n  animations: [\n    trigger('toggled', [\n      // ...\n      state('true', style({\n        position: 'fixed',\n        top: '45px',\n        width: '180px'\n      })),\n      state('false', style({\n        position: 'fixed',\n        top: '45px',\n        width: '45px'\n      })),\n      transition('true => false', [\n        animate('0.2s')\n      ]),\n      transition('false => true', [\n        animate('0.3s')\n      ]),\n    ]),\n      trigger('hamburguerX', [\n        state('hamburguer', style({})),\n        state('topX', style({\n          transform: 'rotate(45deg)',\n          transformOrigin: '10% 10%',\n          marginLeft: '7px',\n          marginTop: '12px',\n          width: '15px'\n        })),\n        state('hide', style({\n          opacity: 0\n        })),\n        state('bottomX', style({\n          transform: 'rotate(-45deg)',\n          transformOrigin: '10% 90%',\n          marginLeft: '7px',\n          marginTop: '-2px',\n          width: '15px'\n        })),\n        transition('* => *', [\n          animate('0.1s')\n        ]),\n      ])\n    // trigger('pulse', [transition('* => *', useAnimation(pulse , {\n    //   // Set the duration to 5seconds and delay to 2seconds\n    //   params: { timing: 5, delay: 2 }\n    // }))])\n  ]\n})\nexport class MenuCompComponent implements OnInit, AfterViewInit {\n\n   @ViewChild('pageContentWrapper', {static: false}) pageContentWrapper: ElementRef;\n   @ViewChild('sidebarWrapper', {static: false}) sidebarWrapper: ElementRef;\n   @ViewChild('toggleMenuIcon', {static: false}) toggleMenuIcon: ElementRef;\n  @ViewChild('closeMenuIcon', { static: false}) closeMenuIcon: ElementRef;\n  public toggled = false;\n // pulse: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit() {\n    this.pageContentWrapper.nativeElement.style.marginLeft = '85px';\n    this.pageContentWrapper.nativeElement.style.width = '108%';\n  }\n  onToggle() {\n    this.toggled = !this.toggled;\n    if (this.toggled === true) {\n      this.pageContentWrapper.nativeElement.style.marginLeft = '220px';\n      this.pageContentWrapper.nativeElement.style.width = '96.5%';\n    } else {\n      this.pageContentWrapper.nativeElement.style.marginLeft = '85px';\n      this.pageContentWrapper.nativeElement.style.width = '108%';\n    }\n  }\n  }\n\n","<script src=\"https://code.jquery.com/jquery-3.5.0.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/primeng.min.css\" />\n    \n<div id=\"wrapper\">\n    <div id=\"header\">\n        \n        <nav class=\"navbar navbar-expand-lg navbar-light\">\n            <a class=\"navbar-brand\" routerLink = \"/home\">Tirumala Homeo Clinic</a>\n            <div class=\"container-fluid\">\n                <button id=\"login\" type=\"button\" class=\"btn btn-outline-light\">\n                    <i class=\"fa fa-user fa-lg\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n            \n        </nav>\n        <div id=\"menu-toggle\"\n                role=\"button\" \n                (click)=\"onToggle()\">\n                <div class=\"toggleIcon\">\n                <span class=\"icon-bar\" [@hamburguerX]=\"toggled ? 'topX' : 'hamburguer'\"></span>\n                <span class=\"icon-bar\" [@hamburguerX]=\"toggled ? 'hide' : 'hamburguer'\"></span>\n                <span class=\"icon-bar\" [@hamburguerX]=\"toggled ? 'bottomX' : 'hamburguer'\"></span>\n                </div> \n        </div>\n    </div>\n\n\n    \n    <div [@toggled]=\"toggled ? 'true' : 'false'\" id=\"sidebarWrapper\" #sidebarWrapper>\n        <ul class=\"sidebar-nav\">\n            <li routerLink = \"/home\" \n                routerLinkActive = \"active\" >\n                <i style = \"cursor: pointer;\" class=\"fa fa-fw fa-home\"></i>\n                <a style = \"cursor: pointer;\">Home</a>\n            </li>\n            <li routerLink = \"/search-patient\" routerLinkActive = \"active\">\n                <i style = \"cursor: pointer;\" class=\"fa fa-fw fa-search\"></i>\n                <a style = \"cursor: pointer;\">Search Patient</a>\n            </li>\n            <li routerLink = \"/patient-checkin\" routerLinkActive = \"active\">\n                <i id=\"pcIcon\" style = \"cursor: pointer;\" class=\"fa fa-check-square-o\"></i><a style = \"cursor: pointer;\" >Patient Check-in</a>\n            </li>\n            <li routerLink = \"/contact\" routerLinkActive = \"active\">\n                <i style = \"cursor: pointer;\" class=\"fa fa-fw fa-envelope\"></i><a style = \"cursor: pointer;\">Contact Us</a>\n            </li>\n        </ul>\n    </div> \n   \n    <div id=\"pageContentWrapper\" #pageContentWrapper>\n        <div class=\"container-fluid\">\n            <div id=\"router-outlet\">\n                <router-outlet></router-outlet>\n            </div> \n            </div>\n    </div> \n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Patient } from 'src/app/patients.model';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\n\n\n@Component({\n  selector: 'app-patient-checkin-comp',\n  templateUrl: './patient-checkin-comp.component.html',\n  styleUrls: ['./patient-checkin-comp.component.css']\n})\nexport class PatientCheckinCompComponent implements OnInit {\n\n  patients: Patient[] = [];\n\n patientCheckinForm: FormGroup;\n//  @ViewChild('rdbtn') rbtn: ElementRef;\n\n  constructor(private dataStorageService: DataStorageService) { }\n\n  ngOnInit() {\n    this.initForm();\n    // console.log(this.rbtn);\n\n  }\n\n  private initForm() {\n    const firstName = '';\n    const lastName = '';\n    const dob = '';\n    const gender = '';\n    const phone = '';\n\n    this.patientCheckinForm = new FormGroup({\n      firstName: new FormControl(firstName, Validators.required),\n      lastName: new FormControl(lastName, Validators.required),\n      dob: new FormControl(dob, Validators.required),\n      gender: new FormControl(gender, Validators.required),\n      phone: new FormControl(phone, [Validators.required, Validators.maxLength(10)])\n      // postalCode: new FormControl(postalCode)\n    });\n  }\n\n  onAddPatient() {\n    const pId = '*';\n    const firstName = this.patientCheckinForm.controls.firstName.value ? this.patientCheckinForm.controls.firstName.value : '*';\n    const lastName = this.patientCheckinForm.controls.lastName.value ? this.patientCheckinForm.controls.lastName.value : '*';\n    const dob = this.patientCheckinForm.controls.dob.value ? this.patientCheckinForm.controls.dob.value : '*';\n    const gender = this.patientCheckinForm.controls.gender.value ? this.patientCheckinForm.controls.gender.value : '*';\n    const phone = this.patientCheckinForm.controls.phone.value ? this.patientCheckinForm.controls.phone.value : '*';\n    this.dataStorageService.addPatient(new Patient(pId, firstName, lastName, dob, gender, phone));\n    this.onClear();\n  }\n\n  onClear() {\n    this.patientCheckinForm.reset();\n    this.patientCheckinForm.controls.firstName.setValue('');\n    this.patientCheckinForm.controls.lastName.setValue('');\n    this.patientCheckinForm.controls.dob.setValue('');\n    this.patientCheckinForm.controls.gender.setValue('');\n    this.patientCheckinForm.controls.phone.setValue('');\n    }\n\n}\n","<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/themes/omega/theme.css\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/primeng.min.css\" />\n\n\n<form [formGroup] = \"patientCheckinForm\" #pcForm >\n   <fieldset id=\"pcForm\">\n       <legend >New Patient Check-in Form</legend>\n\n        <p-accordion>\n            <p-accordionTab header=\"Personal Details\"  [selected]=\"true\">\n                <div class=\"form-row\">\n                    <div class = \"form-group col\">\n                        <label for=\"firstName\">First Name</label>\n                            <input type=\"text\" \n                            id=\"firstName\"\n                            class=\"form-control\" \n                            placeholder=\"First Name\"\n                            name = \"firstName\"\n                            formControlName = \"firstName\">\n                    </div>\n                    <div class = \"form-group col\">\n                            <label for=\"lastName\">Last Name</label>\n                            <input type=\"text\" \n                            id=\"lastName\"\n                            class=\"form-control\" \n                            placeholder=\"Last Name\"\n                            name = \"lastName\"\n                            formControlName = \"lastName\">\n                    </div>\n                \n                <!-- <div class = \"form-group row\">\n                        <label for=\"patientId\" class=\"col-sm-3 col-form-label\">Patient Id: </label>\n                        <div class=\"col-sm-9\">\n                        <input type=\"text\" \n                        id=\"patientId\"\n                        class=\"form-control\" \n                        placeholder=\"Patient #\"\n                        name = \"patientId\"\n                        formControlName = \"patientId\">\n                        </div>\n                </div> -->\n                \n                    <div class = \"form-group col\">\n                        <label for=\"dob\">Date of Birth: </label>\n                        <input type=\"date\"\n                        id=\"dob\"\n                        class=\"form-control\"\n                        name = \"dob\"\n                        formControlName = \"dob\">\n                    </div> \n                \n                    <div class=\"form-group col\">\n                        <label for=\"gender\">Gender</label>\n                        <select id=\"gender\" class=\"form-control\" name=\"gender\" formControlName=\"gender\">\n                        <option value=''>Gender</option>\n                        <option>Male</option>\n                        <option>Female</option>\n                        <option>Other</option>\n                        </select>\n                    </div>\n                \n                    <div class=\"form-group col\" id=\"phone-div\">\n                        <label for=\"phone\">Phone No#: </label>\n                        <input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"##########\"\n                        class=\"form-control\"\n                        name = \"phone\"\n                        formControlName = \"phone\">\n                    </div>\n                    \n                </div>\n            </p-accordionTab>\n            <p-accordionTab header=\"Treatment Details\">\n                ...        \n            </p-accordionTab>\n            \n        </p-accordion>\n    \n    \n    \n        <div class=\"form-group row\" id=\"patientCheckinButtons\">\n            <button type=\"submit\" \n            id=\"searchButton\" \n            class=\"btn btn-outline-primary btn-sm col-sm-2\" (click) = \"onAddPatient()\" [disabled] = \"!patientCheckinForm.valid\"><i class=\"fa fa-plus-square\"></i> Add Patient</button>\n        \n            <button type=\"reset\" \n            id=\"cancelButton\" \n            class=\"btn btn-outline-secondary btn-sm col-sm-2\" (click)= \"onClear()\" ><i class=\"fa fa-window-close\"></i> Cancel</button>\n        </div>\n\n    </fieldset>\n   \n\n</form>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\n\n\nimport { PatientService } from 'src/app/patient.service';\nimport { Patient } from 'src/app/patients.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { Table } from 'primeng/table/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Treatment } from '../../treatment.model';\nimport { TreatmentService } from 'src/app/treatment.service';\n\n@Component({\n  selector: 'app-search-comp',\n  templateUrl: './search-comp.component.html',\n  styleUrls: ['./search-comp.component.css']\n})\nexport class SearchCompComponent implements OnInit {\n\n@Input() id: number;\n\npatients: Patient[] = [];\ncols: any[];\npatientSearchForm: FormGroup;\n@ViewChild('dt') table: Table;\npatientCount = 0;\npublic searchMode: boolean;\ntreatments: Treatment[] = [];\ndisplayModal: boolean;\nitemsSymptoms = [];\nselectedSymptoms = [];\nitemsMedications = [];\nselectedMedications = [];\n// dropdownSymptomsSettings = {};\n\nconstructor(private patientService: PatientService,\n            private route: ActivatedRoute,\n            private dataStorageService: DataStorageService,\n            private spinner: NgxSpinnerService,\n            private treatmentService: TreatmentService) {\n\n}\nngOnInit() {\n  this.searchMode = false;\n  this.initForm();\n  this.cols = [\n    { field: 'firstName', header: 'First Name', display: 'table-cell' },\n    { field: 'lastName', header: 'Last Name', display: 'table-cell' },\n    { field: 'dob', header: 'Date Of Birth', display: 'table-cell' },\n    { field: 'gender', header: 'Gender', display: 'table-cell' },\n    { field: 'phone', header: 'Phone #', display: 'table-cell' }\n  ];\n  this.onSearch();\n\n}\n\nprivate initForm() {\n  const pId = '';\n  const firstName = '';\n  const lastName = '';\n  const dob = '';\n  const gender = '';\n  const phone = '';\n  // const postalCode = [];\n\n  this.patientSearchForm = new FormGroup({\n    pId: new FormControl(pId),\n    firstName: new FormControl(firstName),\n    lastName: new FormControl(lastName),\n    dob: new FormControl(dob),\n    gender: new FormControl(gender),\n    phone: new FormControl(phone, Validators.maxLength(10))\n    // postalCode: new FormControl(postalCode)\n  });\n\n}\n\nonSearch() {\n  this.spinner.show();\n  let c = 0;\n  for (const field in this.patientSearchForm.controls) {\n    if (this.patientSearchForm.get(field).value !== null\n        && this.patientSearchForm.get(field).value !== '' || field === 'gender') {\n          c++;\n        }\n  }\n\n  if (c === 0) {\n    this.searchMode = true;\n    this.spinner.hide();\n    return;\n  }\n\n  const pId = this.patientSearchForm.controls.pId.value ? this.patientSearchForm.controls.pId.value : '*';\n  const firstName = this.patientSearchForm.controls.firstName.value ? this.patientSearchForm.controls.firstName.value : '*';\n  const lastName = this.patientSearchForm.controls.lastName.value ? this.patientSearchForm.controls.lastName.value : '*';\n  const dob = this.patientSearchForm.controls.dob.value ? this.patientSearchForm.controls.dob.value : '*';\n  // const gender = this.patientSearchForm.controls.gender.value ? this.patientSearchForm.controls.gender.value : '*';\n  const gender = 'Male';\n  const phone = this.patientSearchForm.controls.phone.value ? this.patientSearchForm.controls.phone.value : '*';\n\n  const patient = new Patient(pId, firstName, lastName, dob, gender, phone);\n\n  // let patientCount = 0;\n\n  setTimeout(() => {\n    this.dataStorageService.getPatientCount()\n    .subscribe(count => {\n      this.patientCount = count;\n      if (this.patientCount > 0) {\n        this.dataStorageService.fetchPatients(patient, this.patientCount)\n        .subscribe(res => {\n          this.patients = [];\n          res.forEach(result => {\n            this.patients.push(new Patient(result._id, result._source.firstName,\n              result._source.lastName,\n              result._source.dob,\n              result._source.gender,\n              result._source.phone));\n          });\n          this.patientService.getPatients();\n        });\n      }\n    });\n    this.searchMode = true;\n    this.spinner.hide();\n  }, 2000);\n\n}\n\n// onSearchAllPatients() {\n//   this.dataStorageService.fetchAllPatients()\n//   .subscribe(result => {\n//   this.patients = [];\n//   result.forEach(i => {\n//     const pat: Patient = i._source;\n//     if (pat !== undefined) {\n//       this.patients.push(i._source);\n//     }\n//     this.patients.slice();\n//     });\n//     });\n// }\n\n  onRowEditInit(patient: Patient) {\n  console.log('Row edit initialized!');\n\n}\n\n  onRowEditSave(patient: Patient) {\n  // console.log('Row edit saved!');\n  this.dataStorageService.updatePatient(patient)\n  .subscribe(() => {\n    console.log('Success!');\n  });\n  }\n\n\n  onRowEditCancel(patient: Patient, index: number) {\n  console.log('Row edit cancelled!');\n}\n\n  onAdd() {\n  let patientCount = 0;\n  this.dataStorageService.getPatientCount()\n  .subscribe(result => {\n    patientCount = result;\n  });\n  this.dataStorageService.storePatient(patientCount);\n}\n\n  onClear() {\n    this.patients = [];\n    this.searchMode = false;\n    this.patientSearchForm.controls.pId.setValue('');\n    this.patientSearchForm.controls.firstName.setValue('');\n    this.patientSearchForm.controls.lastName.setValue('');\n    this.patientSearchForm.controls.dob.setValue('');\n    this.patientSearchForm.controls.gender.setValue('');\n    this.patientSearchForm.controls.phone.setValue('');\n    this.resetSort();\n  }\n\n  resetSort() {\n  this.table.sortOrder = 0;\n  this.table.sortField = '';\n  this.table.reset();\n}\n\n  getAllTreatments() {\n  this.treatments = this.treatmentService.getTreatments();\n  this.itemsSymptoms = this.treatmentService.dropdownSymptoms;\n  this.selectedSymptoms = this.treatmentService.selectedSymptoms;\n  this.itemsMedications = this.treatmentService.dropdownMedications;\n  this.selectedMedications = this.treatmentService.selectedMedications;\n  // this.dropdownSymptomsSettings = this.treatmentService.dropdownSettings;\n}\n\n// onSymptomItemSelect(item: any) {\n//   return this.treatmentService.onItemSelect(item);\n// }\n// onSelectAllSymptoms(items: any) {\n//   return this.treatmentService.onSelectAll(items);\n// }\n\nshowModalNotes() {\n  this.displayModal = true;\n}\n\n}\n","<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/themes/omega/theme.css\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/primeng@4.0.1/resources/primeng.min.css\" />\n\n\n<form [formGroup] = \"patientSearchForm\">\n\n   <fieldset class=\"form-group\" id=\"searchCriteria\">\n    <legend>Search Criteria</legend>\n    <div class=\"form-row\">\n        <div class=\"col\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" \n            class=\"form-control\" \n            id=\"firstName\" \n            name=\"firstName\"\n            placeholder=\"First Name\"\n            formControlName = \"firstName\"\n            >   \n        </div>\n        <div class=\"col\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" \n            class=\"form-control\" \n            id=\"lastName\" \n            placeholder=\"Last Name\"\n            name = \"lastName\"\n            formControlName = \"lastName\">    \n        </div>\n        <!-- <div class=\"col\">\n            <label for=\"patientId\">Patient Id</label>\n            <input type=\"text\" \n            class=\"form-control\" \n            id=\"patientId\" \n            placeholder=\"Patient #\"\n            name = \"patientId\"\n            formControlName = \"patientId\">    \n        </div> -->\n        <div class=\"col\">\n            <label for=\"dob\">Date of Birth</label>\n            <input type=\"date\" \n            class=\"form-control\" \n            id=\"dob\"\n            name = \"dob\"\n            formControlName = \"dob\">    \n        </div>\n        <div class=\"col\">\n            <label for=\"gender\">Gender</label>\n            <select class=\"form-control\" id=\"gender\" formControlName = \"gender\" name = \"gender\">\n                <option value=''>All</option>\n                <option>Male</option>\n                <option>Female</option>\n                <option>Other</option>\n            </select>   \n        </div>\n        <div class=\"col\">\n            <label for=\"phone\">Phone #</label>\n            <input type=\"number\" \n            class=\"form-control\" \n            id=\"phone\" \n            placeholder=\"Phone #\"\n            name = \"phone\"\n            formControlName = \"phone\"\n            pattern = \"^[1-9][0-9]*$\">   \n        </div>\n        <!-- <div class=\"col\">\n            <label for=\"postalCode\">PostalCode</label>\n            <input type=\"number\" \n            class=\"form-control\" \n            id=\"postalCode\" \n            placeholder=\"Postal Code\"\n            name = \"postalCode\"\n            pattern = \"^[1-9][0-9]*$\"\n            formControlName = \"postalCode\">   \n        </div> -->\n    </div>\n    <div id=\"formButtons\">\n            <button type=\"submit\" \n            id=\"searchButton\" \n            class=\"btn btn-outline-primary btn-sm shadow-none\" (click) = \"onSearch()\">Search <i class=\"fa fa-fw fa-search\"></i></button>\n            <button type=\"button\" \n            id=\"clearButton\" \n            class=\"btn btn-outline-secondary btn-sm shadow-none\" (click) = \"onClear()\">Clear</button>\n              \n    </div>\n    \n   </fieldset>\n</form>\n<br>\n\n<fieldset id=\"searchResults\">\n    <legend>Search Results</legend>\n    <p-table #dt [columns]=\"cols\" \n                [value] = \"patients\" \n                editMode = \"row\"\n                dataKey = \"pId\"\n                [rows]=\"18\" \n                [paginator]=\"patients.length > 0\"\n                [scrollable]=\"true\" \n                scrollHeight=\"410px\" \n                >\n       \n        <ng-template pTemplate = \"header\" let-columns>\n            <tr>\n                <th class=\"expandRow\"><i class=\"pi pi-sort-down\"></i></th>\n                <th [ngClass]=\"'tableStyle'\" *ngFor=\"let col of columns\" [pSortableColumn] = \"col.field\">{{col.header}} <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"editButtons && tableStyle\">Action</th>\n            </tr> \n        </ng-template>\n        <ng-template pTemplate = \"body\"\n                     let-rowData\n                     let-expanded=\"expanded\"\n                     let-editing=\"editing\" \n                     let-ri=\"rowIndex\"\n                     >      \n            <tr [ngClass]=\"'tableStyle'\" \n                [pEditableRow]=\"rowData\"\n                class=\"cursor-pointer\"\n                (click)=\"getAllTreatments()\"\n                >\n                <td [pRowToggler]=\"rowData\" class=\"expandRow\">\n                    <a href=\"#\">\n                        <i [ngClass]=\"expanded ? 'pi pi-chevron-circle-down' : 'pi pi-chevron-circle-right'\"></i>\n                    </a>\n                 </td>\n                <td [pRowToggler]=\"rowData\"> \n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.firstName\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.firstName}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td [pRowToggler]=\"rowData\">\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\"> \n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.lastName\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{ rowData.lastName }}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td [pRowToggler]=\"rowData\">\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"date\" [(ngModel)]=\"rowData.dob\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                        {{ rowData.dob | date: \"M/d/yyyy\"}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td [pRowToggler]=\"rowData\">\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.gender\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{ rowData.gender }}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td [pRowToggler]=\"rowData\">\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"number\" [(ngModel)]=\"rowData.phone\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{ rowData.phone }}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td style=\"text-align:center\" class=\"editButtons\">\n                    \n                    <button href=\"#\" *ngIf=\"!editing\" \n                            pButton \n                            type=\"button\" \n                            pInitEditableRow\n                            class=\"btn btn-secondary btn-sm\"\n                            (click)=\"onRowEditInit(rowData)\"\n                            >\n                        <i class=\"pi pi-pencil\"></i>\n                    </button>\n                    <button *ngIf=\"editing\"\n                            pButton\n                            type=\"button\"\n                            pSaveEditableRow\n                            class=\"btn btn-success btn-sm\"\n                            style=\"margin-right: .5em\"\n                            (click)=\"onRowEditSave(rowData)\">\n                        <i class=\"pi pi-check\"></i>\n                    </button>\n                    <button *ngIf=\"editing\"\n                            pButton\n                            type=\"button\"\n                            pCancelEditableRow\n                            class=\"btn btn-danger btn-sm\"\n                            (click)=\"onRowEditCancel(rowData, ri)\">\n                        <i class=\"pi pi-times\"></i>\n                    </button>\n                </td>\n            </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"rowexpansion\" let-columns=\"columns\" id=\"detailedView\">\n            <tr>\n                <td [attr.colspan]=\"columns.length + 2\">\n                    <fieldset class=\"form-group col-sm-6\" id=\"treatmentTableFormGroup\">\n                        <legend>Treatment History</legend>\n                            <p-table #tt [rows]=\"3\"\n                                        [scrollable]=\"true\" \n                                        scrollHeight= \"120px\" \n                                        [value]=\"treatments\"\n                                        sortField=\"tDate\"\n                                        sortOrder=\"-1\"\n                                        >\n                                <ng-template pTemplate = \"header\">\n                                    <tr>\n                                        <th style=\"width: 28%;\">Treatment Date</th>\n                                        <th style=\"width: 42%;\">Symptoms</th>\n                                        <th style=\"width: 30%;\">Medication Pres.</th>\n                                    </tr> \n                                </ng-template>\n                                <ng-template pTemplate = \"body\" let-rowData>      \n                                    <tr>\n                                        <td style=\"width: 28%;\">{{ rowData.tDate }} </td>\n                                        <td style=\"width: 42%;\">{{ rowData.tSymptoms }}</td>\n                                        <td style=\"width: 30%;\">{{ rowData.tMedPrescription }}</td>\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n                                    <!-- <h6>First Name: {{rowData.firstName}}</h6>\n                                    <h6>Last Name: {{rowData.lastName}}</h6>\n                                    <h6>Date of Birth: {{rowData.dob | date: \"M/d/yyyy\"}}</h6>\n                                    <h6>Gender: {{rowData.gender}}</h6>\n                                    <h6>Phone No.: {{rowData.phone}}</h6> -->\n                    </fieldset>\n                    <fieldset class=\"form-group col-sm-6\" id=\"addTreatmentFormGroup\">\n                        <legend>Add Treatment</legend>\n                        <div>\n                            <div class=\"form-group row\">\n                                <label class=\"col-sm-3 col-form-label col-form-label-sm\" for=\"currentDate\">Treatment Date: </label>\n                                <input type=\"date\" \n                                class=\"form-control form-control-sm col-sm-3\" \n                                id=\"currentDate\"\n                                name = \"currentDate\">\n                                <div class=\"col-sm-1\"></div>\n\n                                <button type=\"button\" class=\"btn btn-light col-sm-3\" (click)=\"showModalNotes()\" pButton id=\"addNotes\">Additional Notes <i class=\"pi pi-pencil\"></i></button>\n                                    <p-dialog header=\"Additional Notes\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"\n                                        [draggable]=\"false\" [resizable]=\"false\">\n                                        <textarea>\n\n                                        </textarea>\n                                            <p-footer>\n                                                <button type=\"button\" class=\"btn btn-outline-secondary col-sm-4\" pButton (click)=\"displayModal=false\" label=\"Save\">Save</button>\n                                                <button type=\"button\" class=\"btn btn-outline-secondary col-sm-4\" pButton (click)=\"displayModal=false\" label=\"Cancel\">Cancel</button>\n                                            </p-footer>\n                                    </p-dialog>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label class=\"col-sm-3 col-form-label col-form-label-sm\" for=\"addSymptoms\">Symptom(s): </label>\n                                    <ng-select class=\"col-sm-9\" [items]=\"itemsSymptoms\"\n                                        bindLabel=\"name\"\n                                        placeholder=\"Select Symptoms\"\n                                        [closeOnSelect]=\"false\"\n                                        appendTo=\"body\"\n                                        [multiple]=\"true\"\n                                        [clearSearchOnAdd]=\"true\"\n                                        [virtualScroll]=\"true\"\n                                        [(ngModel)]=\"selectedSymptoms\">\n                                        <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                            <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"/> {{item.name}}\n                                        </ng-template>\n                                </ng-select>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label class=\"col-sm-3 col-form-label col-form-label-sm\" for=\"addMedication\">Medication(s): </label>\n                                <ng-select class=\"symptomStyle col-sm-9\" [items]=\"itemsMedications\"\n                                        bindLabel=\"name\"\n                                        placeholder=\"Select Medications\"\n                                        [closeOnSelect]=\"false\"\n                                        appendTo=\"body\"\n                                        [multiple]=\"true\"\n                                        [clearSearchOnAdd]=\"true\"\n                                        [(ngModel)]=\"selectedMedications\">\n                                        <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                            <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"/> {{item.name}}\n                                        </ng-template>\n                                </ng-select>\n                              </div>\n                              \n                              <div class=\"form-group row\">\n                                <div class=\"col-sm-3\"></div>\n                                <button type=\"button\" class=\"btn btn-outline-primary btn-sm col-sm-4 tButtonAdd\"><i class=\"fa fa-plus-square\"></i> Add Treatment</button> \n                                <button type=\"reset\" class=\"btn btn-outline-secondary btn-sm col-sm-2 tButtonCancel\">Cancel</button>                             \n                            </div>\n                        </div>\n                    </fieldset>\n                </td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n            \n            <tr *ngIf = \"searchMode\" [ngClass]=\"'tableStyle'\">\n                <td [attr.colspan]=\"columns.length\" style=\"text-align:center\">\n                    No records found\n                </td>\n                \n            </tr>\n        </ng-template>\n                 \n    </p-table>\n         \n</fieldset>\n\n\n\n\n\n","import { Patient } from './patients.model';\n\nexport class PatientService {\n\n\n    private patients: Patient[] = [];\n\n    constructor() {\n\n    }\n\n\n    getPatients()  {\n        return this.patients.slice();\n    }\n\n    getPatient(id: number) {\n    }\n\n\n\n}\n","export class Patient {\n    public pId: string;\n    public firstName: string;\n    public lastName: string;\n    public dob: string;\n    public gender: string;\n    public phone: number;\n\n    constructor(pId: string, fname: string, lname: string, dob: string, gender: string, phone: number) {\n        this.pId = pId;\n        this.firstName = fname;\n        this.lastName = lname;\n        this.dob = dob;\n        this.gender = gender;\n        this.phone = phone;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PatientService } from '../patient.service';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Patient } from '../patients.model';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nconst headers = new HttpHeaders()\n        .append('Content-Type', 'application/json');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataStorageService {\n\n\n    constructor(private patientService: PatientService,\n                private http: HttpClient) {}\n\n    storePatient(patientCount: number) {\n        throw new Error('Method not implemented.');\n      }\n\n\n    fetchPatients(patient: Patient, patientCount: number) {\n        const params = {\n            query: {\n                bool: {\n                    must: [{\n                        query_string: {\n                            default_field: 'firstName',\n                            query: patient.firstName + '*'\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'lastName',\n                            query: patient.lastName + '*'\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'gender',\n                            query: patient.gender\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'dob',\n                            query: patient.dob\n                        }\n                    }, {\n                        query_string: {\n                            default_field: 'phone',\n                            query: patient.phone + '*'\n                        }\n                    }]\n                }\n            },\n            from: 0,\n            size: patientCount\n        };\n        return this.http.post('http://ec2-18-218-1-248.us-east-2.compute.amazonaws.com:9200/patients/patient/_search', params, {headers})\n        .pipe(map(data => {\n            // tslint:disable-next-line:no-string-literal\n            let x: any;\n            x = data;\n            const res = x.hits.hits;\n            // console.log(res);\n            return res;\n        }));\n    }\n\n    // fetchAllPatients() {\n    //     return this.http.get('http://ec2-18-218-1-248.us-east-2.compute.amazonaws.com:9200/_search?size=50', {headers})\n    //     .pipe(map(data => {\n    //         // tslint:disable-next-line:no-string-literal\n    //         let x: any;\n    //         x = data;\n    //         const res = x.hits.hits;\n    //         // console.log(res);\n    //         return res;\n    //     }));\n    // }\n\n    getPatientCount() {\n        return this.http.get('http://ec2-18-218-1-248.us-east-2.compute.amazonaws.com:9200/_count')\n        .pipe(map(data => {\n            let x: any;\n            x = data;\n            const res: number = x.count;\n            return res;\n        }));\n    }\n\n    addPatient(patient: Patient) {\n        return this.http.post('http://ec2-18-218-1-248.us-east-2.compute.amazonaws.com:9200/patients/patient/',\n        patient,\n        {headers})\n        .subscribe(res => {\n            console.log(res);\n        });\n    }\n\n    updatePatient(patient: Patient) {\n        const params = {\n            firstName: patient.firstName,\n            lastName: patient.lastName,\n            dob: patient.dob,\n            gender: patient.gender,\n            phone: patient.phone\n        };\n\n        return this.http.put('http://ec2-18-218-1-248.us-east-2.compute.amazonaws.com:9200/patients/patient/' + patient.pId, params, {headers});\n    }\n\n}\n","export class Treatment {\n    public tDate: string;\n    public tSymptoms: string;\n    public tMedPrescription: string;\n    public tNotes: string;\n\n    constructor(treatmentDate: string, symptoms: string, medPrescription: string, notes: string ) {\n        this.tDate = treatmentDate;\n        this.tSymptoms = symptoms;\n        this.tMedPrescription = medPrescription;\n        this.tNotes = notes;\n    }\n\n}\n","import { Treatment } from './treatment.model';\nimport { Injectable, Input } from '@angular/core';\n\n@Injectable()\nexport class TreatmentService {\n    // dropdownItems = [];\n    // selectedItems = [];\n    // dropdownSettings: IDropdownSettings = {};\n\n    private treatments: Treatment[] = [\n        new Treatment('12/27/2019', 'Headache, Low body temperature', 'Arsenic-Alb 200', ''),\n        new Treatment('01/25/2020', 'Body pains, Restlessness', 'Arnica 200', ''),\n        new Treatment('02/12/2020', 'Nausea, Headache', 'Nuxvom 30', ''),\n        new Treatment('02/02/2020', 'High Temperature, Nausea, Body Pains', 'Mg-Phos 60', ''),\n        new Treatment('03/10/2020', 'Sinus, Headache', 'Arsenic Alb 200', ''),\n        new Treatment('03/10/2020', 'Stomach ache, Nausea', 'Merc-Sol 60', '')\n    ];\n    public dropdownSymptoms = [\n      { id: 1, name: 'Headache' },\n      { id: 2, name: 'Body Pains' },\n      { id: 3, name: 'Stomach ache' },\n      { id: 4, name: 'Nausea' },\n      { id: 5, name: 'Sinus' },\n      { id: 6, name: 'Low Temperature'},\n      { id: 7, name: 'High Temperature'}\n    ];\n\n    public selectedSymptoms = [\n        // { id: 2, name: 'Body Pains' },\n        // { id: 7, name: 'High Temperature' }\n      ];\n\n    public dropdownMedications = [\n      { id: 1, name: 'Arsenic-Alb 30' },\n      { id: 2, name: 'Arnica 60' },\n      { id: 3, name: 'Arsenic Alb 200' },\n      { id: 4, name: 'Merc-Sol 30' },\n      { id: 5, name: 'Mg-Phos 60' },\n      { id: 6, name: 'Nuxvom 200'}\n    ];\n    public selectedMedications = [\n      // { id: 1, name: 'Arsenic-Alb 30' }\n    ];\n\n    getTreatments() {\n        return this.treatments.slice();\n    }\n\n\n    // onItemSelect(item: any) {\n    //     console.log(item);\n    //   }\n    // onSelectAll(items: any) {\n    //     console.log(items);\n    //   }\n    // getDropdownSymptomsSettings() {\n    //     return this.dropdownSettings = {\n    //         singleSelection: false,\n    //         idField: 'item_id',\n    //         textField: 'item_text',\n    //         selectAllText: 'Select All',\n    //         unSelectAllText: 'UnSelect All',\n    //         itemsShowLimit: 3,\n    //         allowSearchFilter: true\n    //       };\n    // }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}